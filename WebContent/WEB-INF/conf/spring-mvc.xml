<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">
	
	<!-- 当在web.xml 中   DispatcherServlet使用     <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->  
	<mvc:default-servlet-handler/>  
	
	<!--<mvc:view-controller path="/header" view-name="header"/>--> 
	<!-- 静态资源映射 --> 
	<!-- 
	<mvc:resources mapping="/images/**" location="/resources/images/" />  
	<mvc:resources mapping="/styles/**" location="/resources/styles/" />  
	<mvc:resources mapping="/scripts/**" location="/resources/scripts/" />
	  -->
	<!-- 启动扫描所有的controller -->  
	<context:component-scan base-package="cn.lv.web.controller">  
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>  
	</context:component-scan> 
	
	<!--表示当访问主页时自动转发到index控制器-->
	<mvc:view-controller path="/" view-name="forward:/index"/>
	
	<!-- spring MVC注解驱动 -->
	<mvc:annotation-driven/>
	
	<!-- 使用注解映射 -->
	<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	
	<!-- 让springmvc支持文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxInMemorySize" value="2048"></property>
		<property name="maxUploadSize" value="1000000000"/>
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>
	
	<!--配置freemarker视图重点配置 -->
	<bean id="freemarkerResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="order" value="1" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="cache" value="true" />
		<property name="prefix" value="" /> <!--前缀-->
		<property name="suffix" value=".ftl" /><!--后缀-->
		<property name="contentType" value="text/html;charset=utf-8" /><!--编码-->
		<property name="viewClass">
			<value>
				org.springframework.web.servlet.view.freemarker.FreeMarkerView
			</value>
		</property>
		<!-- 上下文，这里配置之后，fkt文件中可以使用${rc.getContextPath()} 来获取文件上下文，类似jsp的request.getContextPath() -->
		<property name="requestContextAttribute" value="rc"></property>
		<!--
				  如果freemarker自定义函数的话：有个属性 attributesMap这个属性，里面支持方一个map，key-value的方式来定义你的自定义函数。
				  类要实现freemarker提供的接口。
			-->
	</bean>
	
	<!-- 这里定义freemarker.properties文件的加载，和后面的对应。 -->
	<bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
		<property name="location" value="/WEB-INF/conf/freemarker.properties"/>  
	</bean>
	
	<!-- json view -->
	<!--<bean id="defaultJsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>-->
	
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="templateLoaderPath" value="/WEB-INF/views"/> <!-- 模板加载路径 -->
		<property name="freemarkerSettings" ref="freemarkerConfiguration"/>
		<property name="freemarkerVariables" >
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape"/>
			</map>
		</property>  
	</bean>
	
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	
	 <!-- 控制器异常处理 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
              <props>
                  <prop key="java.lang.Exception">
                        error_all
                </prop>
            </props>
        </property>
    </bean>
</beans>